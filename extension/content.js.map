{"version":3,"file":"content.js","mappings":"mBAAA,IAAIA,EAAgB,CAChBC,KAAM,GACNC,QAAS,KACTC,MAAO,EACPC,IAAK,GAGTC,SAASC,iBAAiB,aAAa,SAAUC,GAC7C,GAAqB,IAAjBA,EAAMC,OAAc,CACpB,IACMC,EADYC,OAAOC,eACMC,WAAWC,OAEtCJ,GAAgBJ,SAASS,gBAEc,UAAnCT,SAASS,cAAcC,SACY,aAAnCV,SAASS,cAAcC,UAEvBf,EAAgB,CACZC,KAAMQ,EACNP,QAASG,SAASS,cAClBX,MAAOE,SAASS,cAAcE,eAC9BZ,IAAKC,SAASS,cAAcG,eAI5C,CACJ,IAEAC,OAAOC,QAAQC,UAAUC,aAAY,SAACC,EAASC,EAAQC,GACnD,GAAuB,oBAAnBF,EAAQG,OAA8B,CACtC,IAAMC,EAAeJ,EAAQI,aAE7B,GADAC,QAAQC,IAAI,iBAAkBF,IACzBA,EAED,YADAC,QAAQC,IAAI,sCAIhB,IACIzB,EAAOC,EADPF,EAAUG,SAASS,cAYvB,GAT0B,UAApBZ,EAAQa,SAA2C,aAApBb,EAAQa,SACzCb,EAAUF,EAAcE,QACxBC,EAAQH,EAAcG,MACtBC,EAAMJ,EAAcI,MAEpBD,EAAQD,EAAQc,eAChBZ,EAAMF,EAAQe,eAIdf,GACqB,UAApBA,EAAQa,SAA2C,aAApBb,EAAQa,QAgBxCY,QAAQE,MAAM,qDAfhB,CACE,IAAMC,EAAe5B,EAAQ6B,MAE7B7B,EAAQ6B,MACJD,EAAaE,UAAU,EAAG7B,GAC1BuB,EACAI,EAAaE,UAAU5B,GAE3BF,EAAQ+B,kBACJ9B,EAAQuB,EAAaQ,OACrB/B,EAAQuB,EAAaQ,QAGzBhC,EAAQiC,cAAc,IAAIC,MAAM,QAAS,CAACC,SAAS,IACvD,CAGJ,CACJ,IAEA,IACQnB,OAAOC,QACPd,SAASC,iBAAiB,eAAe,SAACC,GACtC,IAAIE,EAAeC,OAAOC,eAAeC,WACrCH,GACAS,OAAOC,QAAQmB,YAAY,CACvBb,OAAQ,UACRxB,KAAMQ,GAGlB,IAEAkB,QAAQE,MAAM,mCAEtB,CAAE,MAAOU,GACLZ,QAAQE,MAAM,2BAA4BU,EAC9C,C","sources":["webpack://empty-project/./src/content/index.js"],"sourcesContent":["let lastSelection = {\r\n    text: \"\",\r\n    element: null,\r\n    start: 0,\r\n    end: 0,\r\n}\r\n\r\ndocument.addEventListener(\"mousedown\", function (event) {\r\n    if (event.button === 2) {\r\n        const selection = window.getSelection()\r\n        const selectedText = selection.toString().trim()\r\n\r\n        if (selectedText && document.activeElement) {\r\n            if (\r\n                document.activeElement.tagName === \"INPUT\" ||\r\n                document.activeElement.tagName === \"TEXTAREA\"\r\n            ) {\r\n                lastSelection = {\r\n                    text: selectedText,\r\n                    element: document.activeElement,\r\n                    start: document.activeElement.selectionStart,\r\n                    end: document.activeElement.selectionEnd,\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    if (request.action === \"enhanceResponse\") {\r\n        const enhancedText = request.enhancedText\r\n        console.log(\"Enhanced text:\", enhancedText)\r\n        if (!enhancedText) {\r\n            console.log(\"Enhanced text is null or undefined\")\r\n            return\r\n        }\r\n\r\n        let element = document.activeElement\r\n        let start, end\r\n\r\n        if (!(element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\")) {\r\n            element = lastSelection.element\r\n            start = lastSelection.start\r\n            end = lastSelection.end\r\n        } else {\r\n            start = element.selectionStart\r\n            end = element.selectionEnd\r\n        }\r\n\r\n        if (\r\n            element &&\r\n            (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\")\r\n        ) {\r\n            const originalText = element.value\r\n\r\n            element.value =\r\n                originalText.substring(0, start) +\r\n                enhancedText +\r\n                originalText.substring(end)\r\n\r\n            element.setSelectionRange(\r\n                start + enhancedText.length,\r\n                start + enhancedText.length\r\n            )\r\n\r\n            element.dispatchEvent(new Event(\"input\", {bubbles: true}))\r\n        } else {\r\n            console.error(\"No valid input element found to replace text.\")\r\n        }\r\n    }\r\n})\r\n\r\ntry {\r\n    if (chrome.runtime) {\r\n        document.addEventListener(\"contextmenu\", (event) => {\r\n            let selectedText = window.getSelection().toString()\r\n            if (selectedText) {\r\n                chrome.runtime.sendMessage({\r\n                    action: \"enhance\",\r\n                    text: selectedText,\r\n                })\r\n            }\r\n        })\r\n    } else {\r\n        console.error(\"chrome.runtime is not available.\")\r\n    }\r\n} catch (e) {\r\n    console.error(\"Error in content script:\", e)\r\n}\r\n"],"names":["lastSelection","text","element","start","end","document","addEventListener","event","button","selectedText","window","getSelection","toString","trim","activeElement","tagName","selectionStart","selectionEnd","chrome","runtime","onMessage","addListener","request","sender","sendResponse","action","enhancedText","console","log","error","originalText","value","substring","setSelectionRange","length","dispatchEvent","Event","bubbles","sendMessage","e"],"sourceRoot":""}